{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zaki\\\\Desktop\\\\Node p\\\\movie-app\\\\src\\\\components\\\\TvshowDestails\\\\TvshowDetail.jsx\";\nimport React, { Component } from \"react\";\nimport \"./tvshowdetail.css\";\nimport Iframe from \"react-iframe\";\nimport 'materialize-css/dist/css/materialize.min.css';\nimport Slider from \"react-slick\";\nvar image = \"https://image.tmdb.org/t/p/w500\";\n\nvar TvshowDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TvshowDetail, _Component);\n\n  function TvshowDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TvshowDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TvshowDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movieDe: [],\n      gendre: [],\n      video: [],\n      season1: [],\n      playin: false\n    };\n\n    _this.video = function () {\n      var apikey = \"9347ea3310e2b25bb6d5eab69e5caca8\";\n      var apiUrl = \"https://api.themoviedb.org/3/tv/\".concat(_this.props.match.params.tvshow, \"/videos?api_key=\").concat(apikey);\n      fetch(apiUrl).then(function (res) {\n        return res.json();\n      }).then(function (video) {\n        _this.setState(_objectSpread({}, _this.state, {\n          video: video.results\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TvshowDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var apikey = \"9347ea3310e2b25bb6d5eab69e5caca8\";\n      var apiUrl = \"https://api.themoviedb.org/3/tv/\".concat(this.props.match.params.tvshow, \"?api_key=\").concat(apikey);\n      fetch(apiUrl).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.poster_path) {\n          _this2.setState({\n            movieDe: data,\n            gendre: data.genres,\n            season1: data.seasons\n          });\n\n          document.title = data.original_name;\n        }\n      });\n      this.video();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          movieDe = _this$state.movieDe,\n          gendre = _this$state.gendre,\n          video = _this$state.video,\n          season1 = _this$state.season1;\n      var trailerVid = video.map(function (vid) {\n        var url = \"https://www.youtube.com/embed/\".concat(vid.key);\n        return React.createElement(\"div\", {\n          className: \"vieosIframe open-trailer\",\n          key: vid.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Iframe, {\n          url: url,\n          title: \"youtube\",\n          width: \"100%\",\n          height: \"450px\",\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      });\n      var gen = gendre.map(function (genre) {\n        return React.createElement(\"div\", {\n          key: genre.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" \", genre.name, \",\"));\n      });\n      var poster = image + movieDe.poster_path;\n      var ses = season1.map(function (seas) {\n        return React.createElement(\"div\", {\n          class: \"col s6 m6\",\n          style: {\n            width: \"300px\",\n            height: \"400px\",\n            overflow: \"hidden\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"card grey darken-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: image + seas.poster_path,\n          style: {\n            width: \"250px\",\n            height: \"250px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"card-content white-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Season:\", seas.Specials), React.createElement(\"span\", {\n          class: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Episodes:\", seas.episode_count), React.createElement(\"span\", {\n          class: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Air Date:\", seas.air_date), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, seas.overview))));\n      });\n\n      var trailerButton = function trailerButton() {\n        document.querySelector(\".vieosIframe\").classList.toggle(\"openTrailer\");\n\n        _this3.setState(_objectSpread({}, _this3.state, {\n          playin: true\n        }));\n      };\n\n      return React.createElement(\"div\", {\n        className: \"container \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cascade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s4  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        style: {\n          width: \"250px\",\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: poster,\n        alt: \"movie\",\n        style: {\n          width: \"250px\",\n          height: \"400px\",\n          borderRadius: \"4px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cascade1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        class: \"left-align white-text bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, movieDe.original_name)), React.createElement(\"h5\", {\n        class: \"left-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Vote: \", movieDe.vote_average), React.createElement(\"h6\", {\n        className: \"black-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Vote count: \", movieDe.vote_count), React.createElement(\"div\", {\n        className: \"genree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Genre: \", gen), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Status: \", movieDe.status), React.createElement(\"p\", {\n        className: \"black-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Runtime: \", movieDe.episode_run_time), React.createElement(\"p\", {\n        className: \"black-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"First Airdate: \", movieDe.first_air_date), React.createElement(\"p\", {\n        className: \"black-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Movie Overview: \"), movieDe.overview)))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, ses)));\n    }\n  }]);\n\n  return TvshowDetail;\n}(Component);\n\nexport default TvshowDetail;","map":{"version":3,"sources":["C:/Users/zaki/Desktop/Node p/movie-app/src/components/TvshowDestails/TvshowDetail.jsx"],"names":["React","Component","Iframe","Slider","image","TvshowDetail","state","movieDe","gendre","video","season1","playin","apikey","apiUrl","props","match","params","tvshow","fetch","then","res","json","setState","results","data","poster_path","genres","seasons","document","title","original_name","trailerVid","map","vid","url","key","id","gen","genre","name","poster","ses","seas","width","height","overflow","Specials","episode_count","air_date","overview","trailerButton","querySelector","classList","toggle","borderRadius","vote_average","vote_count","status","episode_run_time","first_air_date"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,8CAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,IAAMC,KAAK,GAAG,iCAAd;;IAGMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,MAAM,EAAE;AALF,K;;UAQRF,K,GAAQ,YAAM;AACZ,UAAMG,MAAM,GAAG,kCAAf;AACA,UAAMC,MAAM,6CACV,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MADd,6BAEOL,MAFP,CAAZ;AAIAM,MAAAA,KAAK,CAACL,MAAD,CAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAV,KAAK,EAAI;AACb,cAAKa,QAAL,mBAAmB,MAAKhB,KAAxB;AAA+BG,UAAAA,KAAK,EAAEA,KAAK,CAACc;AAA5C;AACD,OAJH;AAKD,K;;;;;;;wCACmB;AAAA;;AAClB,UAAMX,MAAM,GAAG,kCAAf;AACA,UAAMC,MAAM,6CACV,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MADd,sBAEAL,MAFA,CAAZ;AAGAM,MAAAA,KAAK,CAACL,MAAD,CAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAK,IAAI,EAAI;AACZ,YAAIA,IAAI,CAACC,WAAT,EAAsB;AACpB,UAAA,MAAI,CAACH,QAAL,CAAc;AAAEf,YAAAA,OAAO,EAAEiB,IAAX;AAAiBhB,YAAAA,MAAM,EAAEgB,IAAI,CAACE,MAA9B;AAAsChB,YAAAA,OAAO,EAACc,IAAI,CAACG;AAAnD,WAAd;;AACAC,UAAAA,QAAQ,CAACC,KAAT,GAAiBL,IAAI,CAACM,aAAtB;AACD;AACF,OAPH;AAQA,WAAKrB,KAAL;AACD;;;6BACQ;AAAA;;AAAA,wBACoC,KAAKH,KADzC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,MADV,eACUA,MADV;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACwBC,OADxB,eACwBA,OADxB;AAGP,UAAMqB,UAAU,GAAGtB,KAAK,CAACuB,GAAN,CAAU,UAAAC,GAAG,EAAI;AAClC,YAAMC,GAAG,2CAAoCD,GAAG,CAACE,GAAxC,CAAT;AACA,eACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAA0C,UAAA,GAAG,EAAEF,GAAG,CAACG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEF,GADP;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,MAAM,EAAC,OAJT;AAKE,UAAA,WAAW,EAAC,GALd;AAME,UAAA,KAAK,EAAC,yEANR;AAOE,UAAA,eAAe,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAaD,OAfkB,CAAnB;AAiBA,UAAMG,GAAG,GAAG7B,MAAM,CAACwB,GAAP,CAAW,UAAAM,KAAK;AAAA,eAC1B;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACF,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAQE,KAAK,CAACC,IAAd,MADF,CAD0B;AAAA,OAAhB,CAAZ;AAQA,UAAMC,MAAM,GAAGpC,KAAK,GAAGG,OAAO,CAACkB,WAA/B;AAGA,UAAMgB,GAAG,GAAG/B,OAAO,CAACsB,GAAR,CAAY,UAAAU,IAAI;AAAA,eAC1B;AAAK,UAAA,KAAK,EAAC,WAAX;AAAuB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,OAAP;AAAeC,YAAAA,MAAM,EAAC,OAAtB;AAA8BC,YAAAA,QAAQ,EAAC;AAAvC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,GAAG,EAAEzC,KAAK,GAACsC,IAAI,CAACjB,WAArB;AAAkC,UAAA,KAAK,EAAE;AAACkB,YAAAA,KAAK,EAAC,OAAP;AAAeC,YAAAA,MAAM,EAAC;AAAtB,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADA,EAIE;AAAK,UAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCF,IAAI,CAACI,QAAxC,CADF,EAEE;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqCJ,IAAI,CAACK,aAA1C,CAFF,EAGE;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqCL,IAAI,CAACM,QAA1C,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,IAAI,CAACO,QAAT,CAJF,CAJF,CADA,CAD0B;AAAA,OAAhB,CAAZ;;AAgBA,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BtB,QAAAA,QAAQ,CAACuB,aAAT,CAAuB,cAAvB,EAAuCC,SAAvC,CAAiDC,MAAjD,CAAwD,aAAxD;;AACA,QAAA,MAAI,CAAC/B,QAAL,mBAAmB,MAAI,CAAChB,KAAxB;AAA+BK,UAAAA,MAAM,EAAE;AAAvC;AACD,OAHD;;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAACgC,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,GAAG,EAAEJ,MAAV;AAAkB,QAAA,GAAG,EAAC,OAAtB;AAA8B,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,MAAM,EAAC,OAAtB;AAA8BU,UAAAA,YAAY,EAAC;AAA3C,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADA,EAQI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC/C,OAAO,CAACuB,aAAhD,CADF,CADA,EAIG;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8BvB,OAAO,CAACgD,YAAtC,CAJH,EAKV;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwChD,OAAO,CAACiD,UAAhD,CALU,EAOV;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACoBnB,GADpB,CAPU,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe9B,OAAO,CAACkD,MAAvB,CAVF,EAWE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoClD,OAAO,CAACmD,gBAA5C,CAXF,EAYC;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0CnD,OAAO,CAACoD,cAAlD,CAZD,EAeC;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA1B,EAAoDpD,OAAO,CAAC0C,QAA5D,CAfD,CAFA,CARJ,CADA,EA+BE;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACPR,GADO,CA/BF,CADA,CADF;AAuCD;;;;EA/HwBxC,S;;AAkI3B,eAAeI,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./tvshowdetail.css\";\r\nimport Iframe from \"react-iframe\";\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport Slider from \"react-slick\";\r\nconst image = \"https://image.tmdb.org/t/p/w500\"; \r\n\r\n\r\nclass TvshowDetail extends Component {\r\n  state = {\r\n    movieDe: [],\r\n    gendre: [],\r\n    video: [],\r\n    season1: [],\r\n    playin: false\r\n  };\r\n\r\n  video = () => {\r\n    const apikey = \"9347ea3310e2b25bb6d5eab69e5caca8\";\r\n    const apiUrl = `https://api.themoviedb.org/3/tv/${\r\n      this.props.match.params.tvshow\r\n    }/videos?api_key=${apikey}`;\r\n\r\n    fetch(apiUrl)\r\n      .then(res => res.json())\r\n      .then(video => {\r\n        this.setState({ ...this.state, video: video.results });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const apikey = \"9347ea3310e2b25bb6d5eab69e5caca8\";\r\n    const apiUrl = `https://api.themoviedb.org/3/tv/${\r\n      this.props.match.params.tvshow\r\n    }?api_key=${apikey}`;\r\n    fetch(apiUrl)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.poster_path) {\r\n          this.setState({ movieDe: data, gendre: data.genres ,season1:data.seasons });\r\n          document.title = data.original_name;\r\n        }\r\n      });\r\n    this.video();\r\n  }\r\n  render() {\r\n    const { movieDe, gendre, video,season1 } = this.state;\r\n\r\n    const trailerVid = video.map(vid => {\r\n      const url = `https://www.youtube.com/embed/${vid.key}`;\r\n      return (\r\n        <div className=\"vieosIframe open-trailer\" key={vid.id}>\r\n          <Iframe\r\n            url={url}\r\n            title=\"youtube\"\r\n            width=\"100%\"\r\n            height=\"450px\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const gen = gendre.map(genre => (\r\n      <div key={genre.id} >\r\n        <span> {genre.name},</span>\r\n      </div>\r\n    ));\r\n\r\n    \r\n\r\n    const poster = image + movieDe.poster_path;\r\n\r\n\r\n    const ses = season1.map(seas =>(\r\n      <div class=\"col s6 m6\" style={{width:\"300px\",height:\"400px\",overflow:\"hidden\"}}>\r\n      <div class=\"card grey darken-1\">\r\n      <div className=\"card-image\">\r\n      <img src={image+seas.poster_path} style={{width:\"250px\",height:\"250px\"}}/>\r\n      </div>\r\n        <div class=\"card-content white-text\">\r\n          <span class=\"card-content\">Season:{seas.Specials}</span>\r\n          <span class=\"card-content\">Episodes:{seas.episode_count}</span>\r\n          <span class=\"card-content\">Air Date:{seas.air_date}</span>\r\n          <p>{seas.overview}</p>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n    ));\r\n    const trailerButton = () => {\r\n      document.querySelector(\".vieosIframe\").classList.toggle(\"openTrailer\");\r\n      this.setState({ ...this.state, playin: true });\r\n    };\r\n   \r\n    return (\r\n      <div className=\"container \">\r\n      <div className=\"cascade\">\r\n      <div className=\"row\">\r\n      <div className=\"col s4  \">\r\n        <div className=\"card-image\" style={{width:\"250px\",height:\"400px\"}}>\r\n         \r\n          <img src={poster} alt=\"movie\" style={{width:\"250px\",height:\"400px\",borderRadius:\"4px\"}}  />\r\n            \r\n          </div>\r\n          </div>\r\n          <div className=\"col s8\">\r\n          \r\n          <div className=\"cascade1\">\r\n          <div className=\"title1\">\r\n            <h4 class=\"left-align white-text bold\">{movieDe.original_name}</h4>\r\n            </div>\r\n             <h5 class=\"left-align\">Vote: {movieDe.vote_average}</h5>\r\n<h6 className=\"black-text\">Vote count: {movieDe.vote_count}</h6>\r\n            \r\n<div className=\"genree\">\r\n            Genre: {gen}\r\n            </div>\r\n            <span>Status: {movieDe.status}</span>\r\n            <p className=\"black-text\">Runtime: {movieDe.episode_run_time}</p>\r\n           <p className=\"black-text\">First Airdate: {movieDe.first_air_date}</p>\r\n\r\n          \r\n           <p className=\"black-text\"><h5>Movie Overview: </h5>{movieDe.overview}</p>\r\n              </div>\r\n   </div>\r\n  \r\n        </div>\r\n        <div class=\"row\">\r\n{ses}\r\n  </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TvshowDetail;\r\n"]},"metadata":{},"sourceType":"module"}